name: Deploy Services

on:
  push:
    branches:
      - develop

jobs:
  build:
    name: Build Affected Projects
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Set base and head SHAs
        run: |
          git fetch origin develop
          BASE_COMMIT=$(git rev-parse origin/develop~1)
          HEAD_COMMIT=$(git rev-parse HEAD)
          echo "BASE_COMMIT=$BASE_COMMIT" >> $GITHUB_ENV
          echo "HEAD_COMMIT=$HEAD_COMMIT" >> $GITHUB_ENV

      - name: Print changed files
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ env.BASE_COMMIT }} ${{ env.HEAD_COMMIT }})
          echo "Changed files: $CHANGED_FILES"
        id: changes

      - name: Run Nx build affected
        env:
          CI: true
          BASE_COMMIT: ${{ env.BASE_COMMIT }}
          HEAD_COMMIT: ${{ env.HEAD_COMMIT }}
        run: |
          CHANGED_FILES=$(git diff --name-only $BASE_COMMIT $HEAD_COMMIT)
          echo "Changed files: $CHANGED_FILES"

          if [ -z "$CHANGED_FILES" ]; then
            echo "No changes detected."
            exit 0
          fi

          # Build affected projects
          npx nx affected --target=build --base=$BASE_COMMIT --head=$HEAD_COMMIT --parallel --verbose

  test:
    name: Test Affected Projects
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Set base and head SHAs
        run: |
          git fetch origin develop
          BASE_COMMIT=$(git rev-parse origin/develop~1)
          HEAD_COMMIT=$(git rev-parse HEAD)
          echo "BASE_COMMIT=$BASE_COMMIT" >> $GITHUB_ENV
          echo "HEAD_COMMIT=$HEAD_COMMIT" >> $GITHUB_ENV

      - name: Print changed files
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ env.BASE_COMMIT }} ${{ env.HEAD_COMMIT }})
          echo "Changed files: $CHANGED_FILES"
        id: changes

      - name: Run Nx test affected
        env:
          CI: true
          BASE_COMMIT: ${{ env.BASE_COMMIT }}
          HEAD_COMMIT: ${{ env.HEAD_COMMIT }}
        run: |
          CHANGED_FILES=$(git diff --name-only $BASE_COMMIT $HEAD_COMMIT)
          echo "Changed files: $CHANGED_FILES"

          if [ -z "$CHANGED_FILES" ]; then
            echo "No changes detected."
            exit 0
          fi

          # Test affected projects
          npx nx affected --target=test --base=$BASE_COMMIT --head=$HEAD_COMMIT --parallel --verbose -- --coverage

  deploy:
    name: Deploy Affected Projects
    runs-on: ubuntu-latest
    needs: [build, test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Set base and head SHAs
        run: |
          git fetch origin develop
          BASE_COMMIT=$(git rev-parse origin/develop~1)
          HEAD_COMMIT=$(git rev-parse HEAD)
          echo "BASE_COMMIT=$BASE_COMMIT" >> $GITHUB_ENV
          echo "HEAD_COMMIT=$HEAD_COMMIT" >> $GITHUB_ENV

      - name: Print changed files
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ env.BASE_COMMIT }} ${{ env.HEAD_COMMIT }})
          echo "Changed files: $CHANGED_FILES"
        id: changes

      - name: Run Nx deploy affected
        env:
          CI: true
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'
          BASE_COMMIT: ${{ env.BASE_COMMIT }}
          HEAD_COMMIT: ${{ env.HEAD_COMMIT }}
        run: |
          CHANGED_FILES=$(git diff --name-only $BASE_COMMIT $HEAD_COMMIT)
          echo "Changed files: $CHANGED_FILES"

          if [ -z "$CHANGED_FILES" ]; then
            echo "No changes detected."
            exit 0
          fi

          # Deploy affected projects
          npx nx affected --target=deploy --base=$BASE_COMMIT --head=$HEAD_COMMIT --parallel --verbose
